spring.application.name=feedshop-test

spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=MYSQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

server.ssl.enabled=false

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

logging.level.org.springframework=DEBUG
logging.level.com.cMall.feedShop=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

spring.mail.host=smtp.gmail.com
spring.mail.port=587
management.health.mail.enabled=false

app.verification-url=https://localhost:8443/api/auth/verify-email?token=
app.password-reset-url=http://localhost:3000/reset-password

recaptcha.secret-key=${RECAPTCHA_SECRET_KEY:test-recaptcha-secret-key}
recaptcha.score-threshold=0.5

mailgun.api.key=${MAILGUN_API_KEY:test-mailgun-api-key}
mailgun.domain=${MAILGUN_DOMAIN:test.mailgun.org}
mailgun.from.email=${MAILGUN_EMAIL:test@mailgun.org}

gcp.storage.enabled=false

file.upload.base-path=./test-uploads
file.upload.cache-period=3600

app.cdn.base-url=https://mock-cdn.example.com

# JWT
jwt.secret=${JWT_SECRET:test-jwt-secret-key-for-testing-purposes-only}
jwt.access-token-expiration-ms=3600000
jwt.refresh-token-expiration-ms=1209600000

# OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:test-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:test-google-client-secret}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=https://localhost:8443/login/oauth2/code/google

spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID:test-kakao-client-id}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET:test-kakao-client-secret}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri=https://localhost:8443/login/oauth2/code/kakao

# OAuth2 Provider
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2
app.oauth2.authorized-redirect-uri=http://localhost:3000/auth/callback

# Spring AI
ai.enabled=false
spring.ai.openai.api-key=${OPENAI_API_KEY:test-openai-api-key}
spring.ai.openai.chat.options.model=gpt-4
spring.ai.openai.chat.options.temperature=0.7
spring.ai.openai.chat.options.max-tokens=1000
logging.level.com.cMall.feedShop.ai=DEBUG